;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 19.02.2023 15:21:51
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF31  	GOTO        98
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_kurulum:
;sketch_1.c,11 :: 		void kurulum() {
;sketch_1.c,13 :: 		ADCON1 |=0x0F;
0x001C	0x0E0F      	MOVLW       15
0x001E	0x12C1      	IORWF       ADCON1, 1 
;sketch_1.c,14 :: 		CMCON  |=0x07;
0x0020	0x0E07      	MOVLW       7
0x0022	0x12B4      	IORWF       CMCON, 1 
;sketch_1.c,16 :: 		TRISB=0;
0x0024	0x6A93      	CLRF        TRISB 
;sketch_1.c,17 :: 		PORTB=0;
0x0026	0x6A81      	CLRF        PORTB 
;sketch_1.c,19 :: 		TRISD=0;
0x0028	0x6A95      	CLRF        TRISD 
;sketch_1.c,20 :: 		PORTD=0;
0x002A	0x6A83      	CLRF        PORTD 
;sketch_1.c,22 :: 		TRISC=0x07;
0x002C	0x0E07      	MOVLW       7
0x002E	0x6E94      	MOVWF       TRISC 
;sketch_1.c,23 :: 		PORTC=0;
0x0030	0x6A82      	CLRF        PORTC 
;sketch_1.c,25 :: 		}
L_end_kurulum:
0x0032	0x0012      	RETURN      0
; end of _kurulum
_Div_8X8_U:
;__Lib_Math.c,77 :: 		
;__Lib_Math.c,84 :: 		
0x0034	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,85 :: 		
0x0036	0x0E08      	MOVLW       8
;__Lib_Math.c,86 :: 		
0x0038	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,87 :: 		
0x003A	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,88 :: 		
0x003C	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,89 :: 		
0x003E	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,90 :: 		
0x0040	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,91 :: 		
0x0042	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,92 :: 		
0x0044	0xD002      	BRA         $+6
;__Lib_Math.c,93 :: 		
0x0046	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,94 :: 		
0x0048	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,95 :: 		
0x004A	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,96 :: 		
0x004C	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,97 :: 		
0x004E	0xD7F5      	BRA         $-20
;__Lib_Math.c,99 :: 		
L_end_Div_8X8_U:
0x0050	0x0012      	RETURN      0
; end of _Div_8X8_U
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0052	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0054	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0058	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x005A	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x005C	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x005E	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0060	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x0062	0xF000ECAC  	CALL        344, 0
;sketch_1.c,26 :: 		void main() {
;sketch_1.c,27 :: 		kurulum();
0x0066	0xDFDA      	RCALL       _kurulum
;sketch_1.c,29 :: 		for(;;)
L_main0:
;sketch_1.c,31 :: 		if(arttir1)
0x0068	0xA082      	BTFSS       PORTC, 0 
0x006A	0xD00E      	BRA         L_main3
;sketch_1.c,33 :: 		display1++;
0x006C	0x2A1F      	INCF        _display1, 1 
;sketch_1.c,34 :: 		LATD=numbers1[display1];
0x006E	0x0E20      	MOVLW       _numbers1
0x0070	0x6EE9      	MOVWF       FSR0L 
0x0072	0x0E00      	MOVLW       hi_addr(_numbers1)
0x0074	0x6EEA      	MOVWF       FSR0L+1 
0x0076	0x501F      	MOVF        _display1, 0 
0x0078	0x26E9      	ADDWF       FSR0L, 1 
0x007A	0xB0D8      	BTFSC       STATUS, 0 
0x007C	0x2AEA      	INCF        FSR0L+1, 1 
0x007E	0xFF8CCFEE  	MOVFF       POSTINC0, LATD
;sketch_1.c,35 :: 		while(arttir1);
L_main4:
0x0082	0xA082      	BTFSS       PORTC, 0 
0x0084	0xD001      	BRA         L_main5
0x0086	0xD7FD      	BRA         L_main4
L_main5:
;sketch_1.c,36 :: 		}
L_main3:
;sketch_1.c,37 :: 		if(arttir2)
0x0088	0xA282      	BTFSS       PORTC, 1 
0x008A	0xD00E      	BRA         L_main6
;sketch_1.c,39 :: 		display2++;
0x008C	0x2A2A      	INCF        _display2, 1 
;sketch_1.c,40 :: 		LATB=numbers2[display2];
0x008E	0x0E15      	MOVLW       _numbers2
0x0090	0x6EE9      	MOVWF       FSR0L 
0x0092	0x0E00      	MOVLW       hi_addr(_numbers2)
0x0094	0x6EEA      	MOVWF       FSR0L+1 
0x0096	0x502A      	MOVF        _display2, 0 
0x0098	0x26E9      	ADDWF       FSR0L, 1 
0x009A	0xB0D8      	BTFSC       STATUS, 0 
0x009C	0x2AEA      	INCF        FSR0L+1, 1 
0x009E	0xFF8ACFEE  	MOVFF       POSTINC0, LATB
;sketch_1.c,41 :: 		while(arttir2);
L_main7:
0x00A2	0xA282      	BTFSS       PORTC, 1 
0x00A4	0xD001      	BRA         L_main8
0x00A6	0xD7FD      	BRA         L_main7
L_main8:
;sketch_1.c,42 :: 		}
L_main6:
;sketch_1.c,43 :: 		if ( (display1>9) | (display1<0) )
0x00A8	0x501F      	MOVF        _display1, 0 
0x00AA	0x0809      	SUBLW       9
0x00AC	0x0E01      	MOVLW       1
0x00AE	0xB0D8      	BTFSC       STATUS, 0 
0x00B0	0x0E00      	MOVLW       0
0x00B2	0x6E01      	MOVWF       R1 
0x00B4	0x0E00      	MOVLW       0
0x00B6	0x5C1F      	SUBWF       _display1, 0 
0x00B8	0x0E01      	MOVLW       1
0x00BA	0xB0D8      	BTFSC       STATUS, 0 
0x00BC	0x0E00      	MOVLW       0
0x00BE	0x6E00      	MOVWF       R0 
0x00C0	0x5001      	MOVF        R1, 0 
0x00C2	0x1200      	IORWF       R0, 1 
0x00C4	0xA4D8      	BTFSS       STATUS, 2 
;sketch_1.c,44 :: 		display1=0;
0x00C6	0x6A1F      	CLRF        _display1 
L_main9:
;sketch_1.c,45 :: 		if ( (display2>9) | (display2<0) )
0x00C8	0x502A      	MOVF        _display2, 0 
0x00CA	0x0809      	SUBLW       9
0x00CC	0x0E01      	MOVLW       1
0x00CE	0xB0D8      	BTFSC       STATUS, 0 
0x00D0	0x0E00      	MOVLW       0
0x00D2	0x6E01      	MOVWF       R1 
0x00D4	0x0E00      	MOVLW       0
0x00D6	0x5C2A      	SUBWF       _display2, 0 
0x00D8	0x0E01      	MOVLW       1
0x00DA	0xB0D8      	BTFSC       STATUS, 0 
0x00DC	0x0E00      	MOVLW       0
0x00DE	0x6E00      	MOVWF       R0 
0x00E0	0x5001      	MOVF        R1, 0 
0x00E2	0x1200      	IORWF       R0, 1 
0x00E4	0xA4D8      	BTFSS       STATUS, 2 
;sketch_1.c,46 :: 		display2=0;
0x00E6	0x6A2A      	CLRF        _display2 
L_main10:
;sketch_1.c,48 :: 		if(topla)
0x00E8	0xA482      	BTFSS       PORTC, 2 
0x00EA	0xD029      	BRA         L_main11
;sketch_1.c,50 :: 		toplam=display1+display2;
0x00EC	0x502A      	MOVF        _display2, 0 
0x00EE	0x241F      	ADDWF       _display1, 0 
0x00F0	0x6E2E      	MOVWF       FLOC__main 
0x00F2	0xF02BC02E  	MOVFF       FLOC__main, _toplam
;sketch_1.c,51 :: 		onlar=toplam/10;
0x00F6	0x0E0A      	MOVLW       10
0x00F8	0x6E04      	MOVWF       R4 
0x00FA	0xF000C02E  	MOVFF       FLOC__main, R0
0x00FE	0xDF9A      	RCALL       _Div_8X8_U
0x0100	0xF02CC000  	MOVFF       R0, _onlar
;sketch_1.c,52 :: 		birler=(toplam-(onlar*10));
0x0104	0x0E0A      	MOVLW       10
0x0106	0x0200      	MULWF       R0 
0x0108	0xF001CFF3  	MOVFF       PRODL, R1
0x010C	0x5001      	MOVF        R1, 0 
0x010E	0x5C2E      	SUBWF       FLOC__main, 0 
0x0110	0x6E01      	MOVWF       R1 
0x0112	0xF02DC001  	MOVFF       R1, _birler
;sketch_1.c,53 :: 		LATD=numbers1[onlar];
0x0116	0x0E20      	MOVLW       _numbers1
0x0118	0x6EE9      	MOVWF       FSR0L 
0x011A	0x0E00      	MOVLW       hi_addr(_numbers1)
0x011C	0x6EEA      	MOVWF       FSR0L+1 
0x011E	0x5000      	MOVF        R0, 0 
0x0120	0x26E9      	ADDWF       FSR0L, 1 
0x0122	0xB0D8      	BTFSC       STATUS, 0 
0x0124	0x2AEA      	INCF        FSR0L+1, 1 
0x0126	0xFF8CCFEE  	MOVFF       POSTINC0, LATD
;sketch_1.c,54 :: 		LATB=numbers2[birler];
0x012A	0x0E15      	MOVLW       _numbers2
0x012C	0x6EE9      	MOVWF       FSR0L 
0x012E	0x0E00      	MOVLW       hi_addr(_numbers2)
0x0130	0x6EEA      	MOVWF       FSR0L+1 
0x0132	0x5001      	MOVF        R1, 0 
0x0134	0x26E9      	ADDWF       FSR0L, 1 
0x0136	0xB0D8      	BTFSC       STATUS, 0 
0x0138	0x2AEA      	INCF        FSR0L+1, 1 
0x013A	0xFF8ACFEE  	MOVFF       POSTINC0, LATB
;sketch_1.c,55 :: 		}
L_main11:
;sketch_1.c,56 :: 		}
0x013E	0xD794      	BRA         L_main0
;sketch_1.c,57 :: 		}
L_end_main:
0x0140	0xD7FF      	BRA         $+0
; end of _main
0x0158	0xF015EE10  	LFSR        1, 21
0x015C	0x0E16      	MOVLW       22
0x015E	0x6E00      	MOVWF       R0 
0x0160	0x0E01      	MOVLW       1
0x0162	0x6E01      	MOVWF       R1 
0x0164	0x0E42      	MOVLW       66
0x0166	0x6EF6      	MOVWF       4086 
0x0168	0x0E01      	MOVLW       1
0x016A	0x6EF7      	MOVWF       TBLPTRH 
0x016C	0x0E00      	MOVLW       0
0x016E	0x6EF8      	MOVWF       TBLPTRU 
0x0170	0xF000EC29  	CALL        82, 0
0x0174	0x0012      	RETURN      0
;sketch_1.c,0 :: ?ICS_numbers2
0x0142	0x063F ;?ICS_numbers2+0
0x0144	0x4F5B ;?ICS_numbers2+2
0x0146	0x6D66 ;?ICS_numbers2+4
0x0148	0x077D ;?ICS_numbers2+6
0x014A	0x6F7F ;?ICS_numbers2+8
; end of ?ICS_numbers2
;sketch_1.c,0 :: ?ICS_display1
0x014C	0x00 ;?ICS_display1+0
; end of ?ICS_display1
;sketch_1.c,0 :: ?ICS_numbers1
0x014D	0x063F ;?ICS_numbers1+0
0x014F	0x4F5B ;?ICS_numbers1+2
0x0151	0x6D66 ;?ICS_numbers1+4
0x0153	0x077D ;?ICS_numbers1+6
0x0155	0x6F7F ;?ICS_numbers1+8
; end of ?ICS_numbers1
;sketch_1.c,0 :: ?ICS_display2
0x0157	0x00 ;?ICS_display2+0
; end of ?ICS_display2
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [24]    _kurulum
0x0034      [30]    _Div_8X8_U
0x0052      [16]    ___CC2DW
0x0062     [224]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015      [10]    _numbers2
0x001F       [1]    _display1
0x0020      [10]    _numbers1
0x002A       [1]    _display2
0x002B       [1]    _toplam
0x002C       [1]    _onlar
0x002D       [1]    _birler
0x002E       [1]    FLOC__main
0x0F81       [1]    PORTB
0x0F82       [1]    PORTC
0x0F83       [1]    PORTD
0x0F8A       [1]    LATB
0x0F8C       [1]    LATD
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0F95       [1]    TRISD
0x0FB4       [1]    CMCON
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0142      [10]    ?ICS_numbers2
0x014C       [1]    ?ICS_display1
0x014D      [10]    ?ICS_numbers1
0x0157       [1]    ?ICS_display2
